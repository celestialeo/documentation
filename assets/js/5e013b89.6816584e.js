"use strict";(self.webpackChunkopen_libra_core_docs=self.webpackChunkopen_libra_core_docs||[]).push([[4507],{6445:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var n=i(5893),o=i(1151);const s={},a="Community Wallet Activation",c={id:"misc/communtiy_wallet_activation",title:"Community Wallet Activation",description:"Community wallet is a qualification an account can receive if it is composed",source:"@site/docs/misc/communtiy_wallet_activation.md",sourceDirName:"misc",slug:"/misc/communtiy_wallet_activation",permalink:"/misc/communtiy_wallet_activation",draft:!1,unlisted:!1,editUrl:"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/misc/communtiy_wallet_activation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Misc",permalink:"/category/misc"},next:{title:"genesis_instructions",permalink:"/misc/genesis_instructions"}},r={},l=[{value:"Step #1:",id:"step-1",level:3},{value:"Step #2",id:"step-2",level:3}];function h(e){const t={code:"code",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"community-wallet-activation",children:"Community Wallet Activation"}),"\n",(0,n.jsx)(t.p,{children:"Community wallet is a qualification an account can receive if it is composed\nwith certain properties.\nThose properties are:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Donor Voice, makes payments with a policy where the donors have observability\nover the transactions."}),"\n",(0,n.jsx)(t.li,{children:"Multisig, accounts can only be manipulated with a multi-sig policy"}),"\n",(0,n.jsx)(t.li,{children:"Ancestry limits, multisig authorities must be minimum of 3 addresses which are\nnot related by Ancestry."}),"\n",(0,n.jsx)(t.li,{children:"Caged, the original authentication key is rotated, similar to resource\naccounts, but further restricted since they cannot sign arbitrary\nscripts."}),"\n"]}),"\n",(0,n.jsx)(t.h1,{id:"steps",children:"Steps"}),"\n",(0,n.jsx)(t.p,{children:"There are two steps in creating a community wallet account:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"make it a Donor Voice account, and check if the proposed authorites could be\nadded."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"This step is atomic, so that if the proposed authorities do not qualify, then\nthe account will not be initialized with Donor Voice features. This is a\nsafety check to ensure the community wallet has the expected authorities\nbefore making it irreversibly a multisig.\n2) finalize the account, making it a multisig with the authorities checked\nabove.\nThis step is irreversible. The current mnemonic will no longer work going\nforward. The only governance possible is that of the multi-sig, and any\nfeatres added (Donor Voice)"}),"\n",(0,n.jsx)(t.h1,{id:"using-txs-tool",children:"Using TXS tool"}),"\n",(0,n.jsx)(t.h3,{id:"step-1",children:"Step #1:"}),"\n",(0,n.jsx)(t.p,{children:"Simply provide the list of addresses, and the signature threshold. The\ntransaction will be rejected if the proposed accounts don't qualify in the\nsimple sybil resistance ancestry check."}),"\n",(0,n.jsx)(t.p,{children:"Note: this step does not commit the accounts as the authorities, it merely\nchecks in advance of finalizing."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"\nlibra txs community gov-init -a 0x1000a -a 0x1000b -a 0x1000b -n 2\n\n"})}),"\n",(0,n.jsx)(t.h3,{id:"step-2",children:"Step #2"}),"\n",(0,n.jsx)(t.p,{children:"You should use the same accounts as in Step #1. There's nothign to enforce this,\nand you can select a different set of accounts."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"libra txs community gov-init -a 0x1000a -a 0x1000b -a 0x1000b -n 2 --finalize\n\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>c,a:()=>a});var n=i(7294);const o={},s=n.createContext(o);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);